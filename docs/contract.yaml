openapi: 3.0.0
info: 
  title: Spec Math API Server
  version: 1.0.0
  description: An API that exposes some operations from the Spec Math Library
servers:
  - description: Spec Math API Server
    url: http://specmath.cloud.google.com/v1
paths:
  /operations/merge:
    post:
      description: |
        perform a union on two or more specs, with optional defaults file and conflict resolutions.
        The endpoint may return a "success" status code along with the merged spec, which is the
        result of a successful union, or a "conflicts" code, which means some unhandled conflicts occurred
        in the union. In the latter case, an array of conflict objects will be sent. The user now has two
        ways to resolve the conflicts. First, they may iterate through the conflicts and add a value to the
        resolvedValue property based on the options available. They could also manually resolve the
        conflicts in the original YAML files. In either case, they can send another request to this
        endpoint with the conflicts resolved.
      operationId: union
      requestBody:
        description: data needed for the union operation
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MergeRequest"
      responses: 
        '200':
          description: |
            operation was successful, returns the resultant spec with status "success", or
            conflicts with status "conflicts"
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OperationResponse"
        default:
          description: error
          content:
            application/json:
              schema:
                "$ref":  "#/components/schemas/Error"  

  /operations/overlay:
    post:
      description: |
        the overlay endpoint takes a spec and an overlay file (which is a partial spec)
        and performs a specialized union where the overlay takes priority. In case of a collision, a
        conflict will not be reported and the value from the overlay will be taken.
      operationId: overlay
      requestBody:
        description: data needed for the overlay operation
        required: true
        content: 
          application/json:
            schema: 
              "$ref": "#/components/schemas/OverlayRequest"
      responses:
        '200':
          description: operation was successful, returns the resultant spec 
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OperationResponse"   
        default:
          description: error
          content:
            application/json:
              schema:
                "$ref":  "#/components/schemas/Error"                
components:
  schemas:
    MergeRequest:
      description: holds data required for the union operation
      type: object
      required:
        - specs
      properties:
        specs:
          description: a list of two or more OpenAPI specifications
          type: array
          items:
            type: string
          minItems: 2
        defaults:
          description: an OpenAPI specification fragment which contains metadata about the merged spec
          type: string
        conflictResolutions:
          description: an array of MergeConflict objects which specify resolutions to conflicting keypaths
          type: array
          items:
            "$ref": "#/components/schemas/MergeConflict"
    
    OverlayRequest:
      description: holds data required for the overlay operation
      type: object
      required:
        - spec
        - overlay
      properties:
        spec:
          description: an OpenAPI specification
          type: string
        overlay:
          description: an OpenAPI specification fragment which contains metadata about the merged spec
          type: string

    MergeConflict:
      description: an individual conflict
      type: object
      properties:
        keypath:
          type: string
          example: paths:/pet:post:summary
        options:
          description: a list of options for the keypath
          type: array
          items:
            type: string
            example: Post a single pet
        resolvedValue:
          type: string
          example: Post a single pet
    
    OperationResponse:
      description: the result of a 200 response on an operations/ endpoint
      type: object
      required:
        - status
      properties:
        result:
          description: the result of the operation, an OpenAPI specification
          type: string
        conflicts:
            description: an array of MergeConflict objects which specify resolutions to conflicting keypaths
            type: array
            items:
              "$ref": "#/components/schemas/MergeConflict"
        status: 
          description: describes whether the operation was successful or not, or the presence of merge conflicts
          type: string
          example: success | conflicts | operation error

    Error:
      description: generic error object
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
